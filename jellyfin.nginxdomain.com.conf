server {
  listen 80;
  listen [::]:80;
  server_name jellyfin.DOMAIN.com;

  return 301 https://jellyfin.DOMAIN.com;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name jellyfin.DOMAIN.com;

    client_max_body_size 0;

    #ssl_certificate      /config/certificates/DOMAIN.com/DOMAIN.com.cer;
    #ssl_certificate_key  /config/certificates/DOMAIN.com/DOMAIN.com.key;
    
    ssl_certificate       /config/certificates/DOMAIN.com/fullchain.pem;
    ssl_certificate_key   /config/certificates/DOMAIN.com/privkey.pem;

    ### Create the dhparam file: 
    ### openssl  dhparam  -out  ssl-dhparams.pem  2048
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:1m;  # about 4000 sessions
    ssl_session_tickets off;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    location / {
        proxy_pass http://SERVER_IP:8096;

        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;
    }

    location ~ (/jellyfin)?/socket {
        proxy_pass http://SERVER_IP:8096;
        
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }

    location ~* ^/Items/(.*)/PlaybackInfo {
        if ($args ~ (^|.*)&MaxStreamingBitrate=\d*(.*)) {
            set $args $1&MaxStreamingBitrate=900000000$3;
        }

        # The following options are the same as in the jellyfin wiki for nginx
        proxy_pass http://10.010.0.10:8096;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;

        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering off;

        # Debug
        add_header X-OVERWRITTENPB 1;
        add_header X-ARGS $args;
        #return 200 $args;
    }
}
